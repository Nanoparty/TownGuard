//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Player/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player Movement"",
            ""id"": ""8c49178f-c97c-4d4d-aa8d-2ffc9ec62799"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""069ae2d3-e934-4a35-935b-554ac13255b2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""PassThrough"",
                    ""id"": ""671012d5-8e73-40d4-b988-04a9126bc347"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""e60315e6-6eb3-4dfc-b037-493653c2e7c2"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""93442231-1b64-48db-8b88-298bead3398f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8b07984f-2e88-48c8-bb22-d2cec56920bf"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b3eb9e9f-73a4-4a59-87ca-856982a48219"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""acc6212d-63af-459d-8170-7da8857c3e77"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""88f225ed-bc99-4cac-82ee-576c52bcdfe1"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a788852-ab42-4c8d-868f-caa3533ace28"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82877916-67f3-4b53-a18b-48a0a96a1dfc"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player Actions"",
            ""id"": ""503d624a-d508-422e-af63-1d6a9e9815bb"",
            ""actions"": [
                {
                    ""name"": ""Roll"",
                    ""type"": ""Button"",
                    ""id"": ""f6899903-3d85-4f7f-88e7-1752161026c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dance1"",
                    ""type"": ""Button"",
                    ""id"": ""6a1e7e06-5cba-48e2-a463-77975a7c8944"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RB"",
                    ""type"": ""Button"",
                    ""id"": ""9590a28b-c5f1-4e5f-9db9-fbaca691b375"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RT"",
                    ""type"": ""Button"",
                    ""id"": ""fc3973f6-2ee0-475b-a723-913861cd8750"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D_Up"",
                    ""type"": ""Button"",
                    ""id"": ""948dbc82-a546-4c9a-905b-6046867de93c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D_Down"",
                    ""type"": ""Button"",
                    ""id"": ""4dcacdd5-d466-4804-95d9-0c21f661d09d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D_Left"",
                    ""type"": ""Button"",
                    ""id"": ""1b3a8e3a-77f4-4d4d-b34e-8038816c79ff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D_Right"",
                    ""type"": ""Button"",
                    ""id"": ""54043b26-ae6c-44c8-a4e2-512fb8e4945f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""A"",
                    ""type"": ""Button"",
                    ""id"": ""9e025f5c-0bfe-4d53-8a97-97b5f12738c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""63f77a7b-ca44-4d05-a5ce-9e03cfd9a94e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Key_1"",
                    ""type"": ""Button"",
                    ""id"": ""2cf046ac-e163-4a30-a4df-8f6b42d60843"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Key_2"",
                    ""type"": ""Button"",
                    ""id"": ""b5ceb6fa-4e65-4710-8bee-981e9a087c9b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Potion"",
                    ""type"": ""Button"",
                    ""id"": ""9e737fb6-1b49-4f1d-8ab0-55c92bfb69d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left_Mouse"",
                    ""type"": ""Button"",
                    ""id"": ""2eca2e3b-3d47-4638-8191-1a8dd3200959"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right_Mouse"",
                    ""type"": ""Button"",
                    ""id"": ""15a786b8-355c-47c9-a7ad-cdd28de16e88"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""998dc631-4619-4b35-aede-2e77c63e19af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LockOn"",
                    ""type"": ""Button"",
                    ""id"": ""a38cdfa3-32be-4b23-870c-abe0acb98589"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c18f0579-6e68-44f6-8c6c-a6485e2f5f0b"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1222a46e-4af0-45fd-aa66-afa014d4c849"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df07070f-ec15-4fa5-a691-f63543adb26a"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dance1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5a18fd1-48dd-4119-80bb-3b14c3851695"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cf383a0b-1ff1-4b4b-8443-a43e5e0f511f"",
                    ""path"": ""<XInputController>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f013fbb-5e05-45ed-b2cb-8abed8aaa822"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05555140-a3de-4287-8bc8-d3a51ce14010"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d9f2d84-0de2-4eb2-b3a0-bba4ecb2f05c"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D_Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1963d857-caed-4dee-a37b-5e3781465a70"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D_Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""10d09f7a-304a-4f21-a36b-acd91778d161"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D_Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e15f534-99f8-4cc0-876d-ff14be7d8b52"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D_Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f92c8f3-19dd-458c-9903-849feb778a45"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D_Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49bf5a03-be71-412c-9b82-7d494144fa0a"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D_Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""801f935d-1b77-483e-858d-09550d82d05c"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D_Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b501020b-a70f-42d8-8070-654c48577a84"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D_Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a36cd96-7672-40dc-9fd2-e1fe0d874da2"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f40da326-f74b-46e4-9cfa-c5f5a8c40ce5"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""898626f5-0b1c-431c-802a-da43d66ec944"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""28a28256-fe43-46df-aa7d-2427d55eed0b"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e330b80-43d5-44ae-89cb-4b6cc40d9d3a"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Key_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef71fb3e-d92e-4f09-a2dc-0e002bc61f95"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Potion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8cadc3f0-118d-440b-82c3-e0d90602ea55"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left_Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c120e6f7-89b8-43fc-8248-fca8bbee3e91"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right_Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df4ae6d5-af59-4c13-843d-66baa5640269"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a7dbc9f-737d-4f92-9ebf-f91c1d2e0c00"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LockOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player Movement
        m_PlayerMovement = asset.FindActionMap("Player Movement", throwIfNotFound: true);
        m_PlayerMovement_Movement = m_PlayerMovement.FindAction("Movement", throwIfNotFound: true);
        m_PlayerMovement_Camera = m_PlayerMovement.FindAction("Camera", throwIfNotFound: true);
        // Player Actions
        m_PlayerActions = asset.FindActionMap("Player Actions", throwIfNotFound: true);
        m_PlayerActions_Roll = m_PlayerActions.FindAction("Roll", throwIfNotFound: true);
        m_PlayerActions_Dance1 = m_PlayerActions.FindAction("Dance1", throwIfNotFound: true);
        m_PlayerActions_RB = m_PlayerActions.FindAction("RB", throwIfNotFound: true);
        m_PlayerActions_RT = m_PlayerActions.FindAction("RT", throwIfNotFound: true);
        m_PlayerActions_D_Up = m_PlayerActions.FindAction("D_Up", throwIfNotFound: true);
        m_PlayerActions_D_Down = m_PlayerActions.FindAction("D_Down", throwIfNotFound: true);
        m_PlayerActions_D_Left = m_PlayerActions.FindAction("D_Left", throwIfNotFound: true);
        m_PlayerActions_D_Right = m_PlayerActions.FindAction("D_Right", throwIfNotFound: true);
        m_PlayerActions_A = m_PlayerActions.FindAction("A", throwIfNotFound: true);
        m_PlayerActions_Jump = m_PlayerActions.FindAction("Jump", throwIfNotFound: true);
        m_PlayerActions_Key_1 = m_PlayerActions.FindAction("Key_1", throwIfNotFound: true);
        m_PlayerActions_Key_2 = m_PlayerActions.FindAction("Key_2", throwIfNotFound: true);
        m_PlayerActions_Potion = m_PlayerActions.FindAction("Potion", throwIfNotFound: true);
        m_PlayerActions_Left_Mouse = m_PlayerActions.FindAction("Left_Mouse", throwIfNotFound: true);
        m_PlayerActions_Right_Mouse = m_PlayerActions.FindAction("Right_Mouse", throwIfNotFound: true);
        m_PlayerActions_Pause = m_PlayerActions.FindAction("Pause", throwIfNotFound: true);
        m_PlayerActions_LockOn = m_PlayerActions.FindAction("LockOn", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player Movement
    private readonly InputActionMap m_PlayerMovement;
    private IPlayerMovementActions m_PlayerMovementActionsCallbackInterface;
    private readonly InputAction m_PlayerMovement_Movement;
    private readonly InputAction m_PlayerMovement_Camera;
    public struct PlayerMovementActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerMovementActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerMovement_Movement;
        public InputAction @Camera => m_Wrapper.m_PlayerMovement_Camera;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMovementActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerMovementActions instance)
        {
            if (m_Wrapper.m_PlayerMovementActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMovement;
                @Camera.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnCamera;
                @Camera.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnCamera;
                @Camera.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnCamera;
            }
            m_Wrapper.m_PlayerMovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Camera.started += instance.OnCamera;
                @Camera.performed += instance.OnCamera;
                @Camera.canceled += instance.OnCamera;
            }
        }
    }
    public PlayerMovementActions @PlayerMovement => new PlayerMovementActions(this);

    // Player Actions
    private readonly InputActionMap m_PlayerActions;
    private IPlayerActionsActions m_PlayerActionsActionsCallbackInterface;
    private readonly InputAction m_PlayerActions_Roll;
    private readonly InputAction m_PlayerActions_Dance1;
    private readonly InputAction m_PlayerActions_RB;
    private readonly InputAction m_PlayerActions_RT;
    private readonly InputAction m_PlayerActions_D_Up;
    private readonly InputAction m_PlayerActions_D_Down;
    private readonly InputAction m_PlayerActions_D_Left;
    private readonly InputAction m_PlayerActions_D_Right;
    private readonly InputAction m_PlayerActions_A;
    private readonly InputAction m_PlayerActions_Jump;
    private readonly InputAction m_PlayerActions_Key_1;
    private readonly InputAction m_PlayerActions_Key_2;
    private readonly InputAction m_PlayerActions_Potion;
    private readonly InputAction m_PlayerActions_Left_Mouse;
    private readonly InputAction m_PlayerActions_Right_Mouse;
    private readonly InputAction m_PlayerActions_Pause;
    private readonly InputAction m_PlayerActions_LockOn;
    public struct PlayerActionsActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActionsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Roll => m_Wrapper.m_PlayerActions_Roll;
        public InputAction @Dance1 => m_Wrapper.m_PlayerActions_Dance1;
        public InputAction @RB => m_Wrapper.m_PlayerActions_RB;
        public InputAction @RT => m_Wrapper.m_PlayerActions_RT;
        public InputAction @D_Up => m_Wrapper.m_PlayerActions_D_Up;
        public InputAction @D_Down => m_Wrapper.m_PlayerActions_D_Down;
        public InputAction @D_Left => m_Wrapper.m_PlayerActions_D_Left;
        public InputAction @D_Right => m_Wrapper.m_PlayerActions_D_Right;
        public InputAction @A => m_Wrapper.m_PlayerActions_A;
        public InputAction @Jump => m_Wrapper.m_PlayerActions_Jump;
        public InputAction @Key_1 => m_Wrapper.m_PlayerActions_Key_1;
        public InputAction @Key_2 => m_Wrapper.m_PlayerActions_Key_2;
        public InputAction @Potion => m_Wrapper.m_PlayerActions_Potion;
        public InputAction @Left_Mouse => m_Wrapper.m_PlayerActions_Left_Mouse;
        public InputAction @Right_Mouse => m_Wrapper.m_PlayerActions_Right_Mouse;
        public InputAction @Pause => m_Wrapper.m_PlayerActions_Pause;
        public InputAction @LockOn => m_Wrapper.m_PlayerActions_LockOn;
        public InputActionMap Get() { return m_Wrapper.m_PlayerActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActionsActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActionsActions instance)
        {
            if (m_Wrapper.m_PlayerActionsActionsCallbackInterface != null)
            {
                @Roll.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnRoll;
                @Roll.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnRoll;
                @Roll.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnRoll;
                @Dance1.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnDance1;
                @Dance1.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnDance1;
                @Dance1.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnDance1;
                @RB.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnRB;
                @RB.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnRB;
                @RB.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnRB;
                @RT.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnRT;
                @RT.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnRT;
                @RT.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnRT;
                @D_Up.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnD_Up;
                @D_Up.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnD_Up;
                @D_Up.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnD_Up;
                @D_Down.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnD_Down;
                @D_Down.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnD_Down;
                @D_Down.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnD_Down;
                @D_Left.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnD_Left;
                @D_Left.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnD_Left;
                @D_Left.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnD_Left;
                @D_Right.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnD_Right;
                @D_Right.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnD_Right;
                @D_Right.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnD_Right;
                @A.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnA;
                @A.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnA;
                @A.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnA;
                @Jump.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnJump;
                @Key_1.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnKey_1;
                @Key_1.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnKey_1;
                @Key_1.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnKey_1;
                @Key_2.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnKey_2;
                @Key_2.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnKey_2;
                @Key_2.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnKey_2;
                @Potion.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPotion;
                @Potion.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPotion;
                @Potion.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPotion;
                @Left_Mouse.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnLeft_Mouse;
                @Left_Mouse.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnLeft_Mouse;
                @Left_Mouse.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnLeft_Mouse;
                @Right_Mouse.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnRight_Mouse;
                @Right_Mouse.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnRight_Mouse;
                @Right_Mouse.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnRight_Mouse;
                @Pause.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnPause;
                @LockOn.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnLockOn;
                @LockOn.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnLockOn;
                @LockOn.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnLockOn;
            }
            m_Wrapper.m_PlayerActionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Roll.started += instance.OnRoll;
                @Roll.performed += instance.OnRoll;
                @Roll.canceled += instance.OnRoll;
                @Dance1.started += instance.OnDance1;
                @Dance1.performed += instance.OnDance1;
                @Dance1.canceled += instance.OnDance1;
                @RB.started += instance.OnRB;
                @RB.performed += instance.OnRB;
                @RB.canceled += instance.OnRB;
                @RT.started += instance.OnRT;
                @RT.performed += instance.OnRT;
                @RT.canceled += instance.OnRT;
                @D_Up.started += instance.OnD_Up;
                @D_Up.performed += instance.OnD_Up;
                @D_Up.canceled += instance.OnD_Up;
                @D_Down.started += instance.OnD_Down;
                @D_Down.performed += instance.OnD_Down;
                @D_Down.canceled += instance.OnD_Down;
                @D_Left.started += instance.OnD_Left;
                @D_Left.performed += instance.OnD_Left;
                @D_Left.canceled += instance.OnD_Left;
                @D_Right.started += instance.OnD_Right;
                @D_Right.performed += instance.OnD_Right;
                @D_Right.canceled += instance.OnD_Right;
                @A.started += instance.OnA;
                @A.performed += instance.OnA;
                @A.canceled += instance.OnA;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Key_1.started += instance.OnKey_1;
                @Key_1.performed += instance.OnKey_1;
                @Key_1.canceled += instance.OnKey_1;
                @Key_2.started += instance.OnKey_2;
                @Key_2.performed += instance.OnKey_2;
                @Key_2.canceled += instance.OnKey_2;
                @Potion.started += instance.OnPotion;
                @Potion.performed += instance.OnPotion;
                @Potion.canceled += instance.OnPotion;
                @Left_Mouse.started += instance.OnLeft_Mouse;
                @Left_Mouse.performed += instance.OnLeft_Mouse;
                @Left_Mouse.canceled += instance.OnLeft_Mouse;
                @Right_Mouse.started += instance.OnRight_Mouse;
                @Right_Mouse.performed += instance.OnRight_Mouse;
                @Right_Mouse.canceled += instance.OnRight_Mouse;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @LockOn.started += instance.OnLockOn;
                @LockOn.performed += instance.OnLockOn;
                @LockOn.canceled += instance.OnLockOn;
            }
        }
    }
    public PlayerActionsActions @PlayerActions => new PlayerActionsActions(this);
    public interface IPlayerMovementActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
    }
    public interface IPlayerActionsActions
    {
        void OnRoll(InputAction.CallbackContext context);
        void OnDance1(InputAction.CallbackContext context);
        void OnRB(InputAction.CallbackContext context);
        void OnRT(InputAction.CallbackContext context);
        void OnD_Up(InputAction.CallbackContext context);
        void OnD_Down(InputAction.CallbackContext context);
        void OnD_Left(InputAction.CallbackContext context);
        void OnD_Right(InputAction.CallbackContext context);
        void OnA(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnKey_1(InputAction.CallbackContext context);
        void OnKey_2(InputAction.CallbackContext context);
        void OnPotion(InputAction.CallbackContext context);
        void OnLeft_Mouse(InputAction.CallbackContext context);
        void OnRight_Mouse(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnLockOn(InputAction.CallbackContext context);
    }
}
